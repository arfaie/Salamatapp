// <auto-generated />
using System;
using Application.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Application.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200606111019_V1")]
    partial class V1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Application.Models.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Description");

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Application.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ApplicationRoleId");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("ApplicationRoleId");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Application.Models.EmployeeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("EmployeeTypes");
                });

            modelBuilder.Entity("Application.Models.Institute_Personal", b =>
                {
                    b.Property<int>("id_personal")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DRName");

                    b.Property<string>("DrFamily");

                    b.Property<int?>("Id_EXPERT");

                    b.Property<int?>("Id_MADRAK");

                    b.Property<int?>("Id_RESHTEH");

                    b.Property<int?>("Id_ROLETYPE");

                    b.Property<int?>("codeOrgan");

                    b.Property<bool?>("flag");

                    b.Property<string>("lastUpdate");

                    b.Property<string>("nezamId");

                    b.Property<string>("passWord");

                    b.HasKey("id_personal");

                    b.HasIndex("Id_EXPERT");

                    b.HasIndex("Id_MADRAK");

                    b.HasIndex("Id_RESHTEH");

                    b.HasIndex("Id_ROLETYPE");

                    b.ToTable("Institute_Personal");
                });

            modelBuilder.Entity("Application.Models.NazarSanji2", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComDate");

                    b.Property<string>("ComTime");

                    b.Property<string>("ans1");

                    b.Property<string>("ans2");

                    b.Property<string>("ans3");

                    b.Property<string>("ans4");

                    b.Property<string>("ans5");

                    b.Property<string>("ans6");

                    b.Property<string>("cityname");

                    b.Property<bool?>("flag");

                    b.Property<string>("hostName");

                    b.Property<string>("malekiyat");

                    b.Property<string>("modatBastari");

                    b.Property<string>("sandogName");

                    b.Property<string>("sex");

                    b.Property<string>("tozihaot");

                    b.HasKey("id");

                    b.ToTable("NazarSanji2");
                });

            modelBuilder.Entity("Application.Models.OfficeRefrandum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeId");

                    b.Property<bool>("Gender");

                    b.Property<int>("IdEdu");

                    b.Property<string>("IdQ1");

                    b.Property<string>("IdQ10");

                    b.Property<string>("IdQ11");

                    b.Property<string>("IdQ2");

                    b.Property<string>("IdQ3");

                    b.Property<string>("IdQ4");

                    b.Property<string>("IdQ5");

                    b.Property<string>("IdQ6");

                    b.Property<string>("IdQ7");

                    b.Property<string>("IdQ8");

                    b.Property<string>("IdQ9");

                    b.Property<bool>("isMarried");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("IdEdu");

                    b.ToTable("OfficeRefrandums");
                });

            modelBuilder.Entity("Application.Models.ROLE_TYPE_", b =>
                {
                    b.Property<int>("id_Role_type")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Role_type_Name");

                    b.Property<bool?>("flag");

                    b.Property<string>("lastUpdate");

                    b.HasKey("id_Role_type");

                    b.ToTable("ROLE_TYPE_");
                });

            modelBuilder.Entity("Application.Models.ServiceTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age");

                    b.Property<string>("Des");

                    b.Property<string>("FlagMoraje");

                    b.Property<bool>("Gender");

                    b.Property<int>("IdCity");

                    b.Property<int>("IdEdu");

                    b.Property<string>("IdQ1");

                    b.Property<string>("IdQ10");

                    b.Property<string>("IdQ11");

                    b.Property<string>("IdQ12");

                    b.Property<string>("IdQ13");

                    b.Property<string>("IdQ14");

                    b.Property<string>("IdQ15");

                    b.Property<string>("IdQ16");

                    b.Property<string>("IdQ2");

                    b.Property<string>("IdQ3");

                    b.Property<string>("IdQ4");

                    b.Property<string>("IdQ5");

                    b.Property<string>("IdQ6");

                    b.Property<string>("IdQ7");

                    b.Property<string>("IdQ8");

                    b.Property<string>("IdQ9");

                    b.Property<string>("Job");

                    b.Property<string>("WicheService");

                    b.HasKey("Id");

                    b.HasIndex("IdCity");

                    b.HasIndex("IdEdu");

                    b.ToTable("ServiceTables");
                });

            modelBuilder.Entity("Application.Models.SurveyOfIinsured", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Des");

                    b.Property<int>("IdBime");

                    b.Property<int>("IdCity");

                    b.Property<string>("IdQ1");

                    b.Property<string>("IdQ2");

                    b.Property<string>("IdQ3");

                    b.Property<string>("IdQ4");

                    b.Property<string>("IdQ5");

                    b.Property<string>("IdQ6");

                    b.Property<string>("hospitalName");

                    b.Property<bool>("hospitalOwnership");

                    b.Property<string>("hospitalStay");

                    b.HasKey("Id");

                    b.HasIndex("IdBime");

                    b.HasIndex("IdCity");

                    b.ToTable("SurveyOfIinsureds");
                });

            modelBuilder.Entity("Application.Models.tbl_Arzyabi", b =>
                {
                    b.Property<int>("idArzyabi")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Arzyabi");

                    b.HasKey("idArzyabi");

                    b.ToTable("tbl_Arzyabi");
                });

            modelBuilder.Entity("Application.Models.tbl_Bime", b =>
                {
                    b.Property<int>("idBime")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BimeType");

                    b.HasKey("idBime");

                    b.ToTable("tbl_Bime");
                });

            modelBuilder.Entity("Application.Models.tbl_Comment", b =>
                {
                    b.Property<int>("idComment")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComDate");

                    b.Property<string>("ComTime");

                    b.Property<string>("CommentText");

                    b.Property<string>("FirstPerson");

                    b.Property<int>("IdQ1");

                    b.Property<int>("IdQ2");

                    b.Property<int>("IdQ3");

                    b.Property<int>("IdQ4");

                    b.Property<int>("IdQ5");

                    b.Property<int>("IdQ6");

                    b.Property<string>("SecondPeson");

                    b.Property<int>("age");

                    b.Property<bool>("flag");

                    b.Property<int>("idBime");

                    b.Property<int>("idEducation");

                    b.Property<int>("idMoraje");

                    b.Property<int>("idReason");

                    b.Property<bool>("idSex");

                    b.Property<int>("idState");

                    b.HasKey("idComment");

                    b.HasIndex("idBime");

                    b.HasIndex("idEducation");

                    b.HasIndex("idMoraje");

                    b.HasIndex("idReason");

                    b.HasIndex("idSex");

                    b.HasIndex("idState");

                    b.ToTable("tbl_Comment");
                });

            modelBuilder.Entity("Application.Models.tbl_CommentOrgan", b =>
                {
                    b.Property<int>("idComment")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComDate")
                        .IsRequired();

                    b.Property<string>("ComTime")
                        .IsRequired();

                    b.Property<string>("CommentText")
                        .IsRequired();

                    b.Property<string>("OrganCode")
                        .IsRequired();

                    b.Property<string>("OrganName")
                        .IsRequired();

                    b.Property<bool>("flag");

                    b.HasKey("idComment");

                    b.ToTable("tbl_CommentOrgan");
                });

            modelBuilder.Entity("Application.Models.tbl_Contact", b =>
                {
                    b.Property<int>("idContact")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Des")
                        .IsRequired();

                    b.Property<string>("TelSmart")
                        .IsRequired();

                    b.Property<string>("adress")
                        .IsRequired();

                    b.Property<string>("fax")
                        .IsRequired();

                    b.Property<string>("lastUpdate");

                    b.Property<string>("mail")
                        .IsRequired();

                    b.Property<string>("postBox")
                        .IsRequired();

                    b.Property<string>("postalCode")
                        .IsRequired();

                    b.Property<string>("tel")
                        .IsRequired();

                    b.Property<string>("website")
                        .IsRequired();

                    b.Property<string>("x")
                        .IsRequired();

                    b.Property<string>("y")
                        .IsRequired();

                    b.HasKey("idContact");

                    b.ToTable("tbl_Contact");
                });

            modelBuilder.Entity("Application.Models.Tbl_Edarat", b =>
                {
                    b.Property<int>("idOffice")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Fax")
                        .IsRequired();

                    b.Property<string>("Tell")
                        .IsRequired();

                    b.Property<string>("admin")
                        .IsRequired();

                    b.Property<string>("adress")
                        .IsRequired();

                    b.Property<string>("city")
                        .IsRequired();

                    b.Property<bool?>("flag");

                    b.Property<string>("lastUpdate");

                    b.Property<string>("x")
                        .IsRequired();

                    b.Property<string>("y")
                        .IsRequired();

                    b.HasKey("idOffice");

                    b.ToTable("Tbl_Edarat");
                });

            modelBuilder.Entity("Application.Models.tbl_Education", b =>
                {
                    b.Property<int>("idEdu")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EduName");

                    b.HasKey("idEdu");

                    b.ToTable("tbl_Education");
                });

            modelBuilder.Entity("Application.Models.tbl_Education2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("TblEducation2");
                });

            modelBuilder.Entity("Application.Models.tbl_Informing", b =>
                {
                    b.Property<int>("idInfo")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("InfoDateTime");

                    b.Property<bool?>("flag");

                    b.Property<string>("imagename");

                    b.Property<string>("infoDes")
                        .IsRequired();

                    b.Property<string>("lastUpdate");

                    b.Property<bool?>("privatePer");

                    b.HasKey("idInfo");

                    b.ToTable("tbl_Informing");
                });

            modelBuilder.Entity("Application.Models.tbl_InformingOrgan", b =>
                {
                    b.Property<int>("idInfo")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("InfoDateTime");

                    b.Property<string>("filename1");

                    b.Property<string>("filename2");

                    b.Property<bool?>("flag");

                    b.Property<string>("infoDes")
                        .IsRequired();

                    b.Property<string>("lastUpdate");

                    b.Property<bool>("privatePer");

                    b.HasKey("idInfo");

                    b.ToTable("tbl_InformingOrgan");
                });

            modelBuilder.Entity("Application.Models.tbl_Institution", b =>
                {
                    b.Property<int>("idIns")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .IsRequired();

                    b.Property<string>("City")
                        .IsRequired();

                    b.Property<int?>("Code")
                        .IsRequired();

                    b.Property<string>("Tell")
                        .IsRequired();

                    b.Property<string>("Title")
                        .IsRequired();

                    b.Property<string>("Type")
                        .IsRequired();

                    b.Property<string>("UpdateDate")
                        .IsRequired();

                    b.Property<bool?>("flag");

                    b.Property<string>("x")
                        .IsRequired();

                    b.Property<string>("y")
                        .IsRequired();

                    b.HasKey("idIns");

                    b.ToTable("tbl_Institution");
                });

            modelBuilder.Entity("Application.Models.tbl_LongOfService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("TblLongOfServices");
                });

            modelBuilder.Entity("Application.Models.tbl_Moraje", b =>
                {
                    b.Property<int>("idMoraje")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Moraje");

                    b.HasKey("idMoraje");

                    b.ToTable("tbl_Moraje");
                });

            modelBuilder.Entity("Application.Models.Tbl_Pishkhan", b =>
                {
                    b.Property<int>("idPishkhan")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ManagerName")
                        .IsRequired();

                    b.Property<string>("address")
                        .IsRequired();

                    b.Property<string>("city")
                        .IsRequired();

                    b.Property<string>("code")
                        .IsRequired();

                    b.Property<bool?>("flag");

                    b.Property<string>("lastUpdate");

                    b.Property<string>("street")
                        .IsRequired();

                    b.Property<string>("tel")
                        .IsRequired();

                    b.Property<string>("x")
                        .IsRequired();

                    b.Property<string>("y")
                        .IsRequired();

                    b.HasKey("idPishkhan");

                    b.ToTable("Tbl_Pishkhan");
                });

            modelBuilder.Entity("Application.Models.tbl_Reason", b =>
                {
                    b.Property<int>("idReason")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ReasonText");

                    b.HasKey("idReason");

                    b.ToTable("tbl_Reason");
                });

            modelBuilder.Entity("Application.Models.Tbl_Setadi", b =>
                {
                    b.Property<int>("idSetadi")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("edare")
                        .IsRequired();

                    b.Property<bool?>("flag");

                    b.Property<string>("lastUpdate");

                    b.Property<string>("tel")
                        .IsRequired();

                    b.HasKey("idSetadi");

                    b.ToTable("Tbl_Setadi");
                });

            modelBuilder.Entity("Application.Models.tbl_sex", b =>
                {
                    b.Property<bool>("idSex");

                    b.Property<string>("sexName");

                    b.HasKey("idSex");

                    b.ToTable("tbl_sex");
                });

            modelBuilder.Entity("Application.Models.tbl_State", b =>
                {
                    b.Property<int>("idState")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StateName");

                    b.HasKey("idState");

                    b.ToTable("tbl_State");
                });

            modelBuilder.Entity("Application.Models.TblAudience", b =>
                {
                    b.Property<int>("idAudience")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nameAudience");

                    b.HasKey("idAudience");

                    b.ToTable("TblAudience");
                });

            modelBuilder.Entity("Application.Models.TblCashDeskInsurance", b =>
                {
                    b.Property<int>("idCashDeskInsurance")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("namelCashDeskInsurance");

                    b.HasKey("idCashDeskInsurance");

                    b.ToTable("TblCashDeskInsurance");
                });

            modelBuilder.Entity("Application.Models.TblCity_", b =>
                {
                    b.Property<int>("idCity")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityName");

                    b.Property<bool?>("flag");

                    b.Property<string>("lastUpdate");

                    b.HasKey("idCity");

                    b.ToTable("TblCity_");
                });

            modelBuilder.Entity("Application.Models.TblComplaint", b =>
                {
                    b.Property<int>("idComplaint")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("CodeInsu");

                    b.Property<string>("dateSend");

                    b.Property<string>("des");

                    b.Property<string>("fName");

                    b.Property<int>("idAudience");

                    b.Property<int>("idCashDeskInsurance");

                    b.Property<int>("idCity");

                    b.Property<byte[]>("img");

                    b.Property<string>("insurerName");

                    b.Property<string>("lName");

                    b.Property<string>("mobile");

                    b.Property<string>("natcode");

                    b.Property<bool?>("readed");

                    b.Property<string>("timeSend");

                    b.Property<string>("unitComplaint");

                    b.HasKey("idComplaint");

                    b.HasIndex("idAudience");

                    b.HasIndex("idCashDeskInsurance");

                    b.HasIndex("idCity");

                    b.ToTable("TblComplaint");
                });

            modelBuilder.Entity("Application.Models.TblContent", b =>
                {
                    b.Property<int>("ContentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContenteDate");

                    b.Property<string>("contentText")
                        .IsRequired();

                    b.Property<string>("contentTitel")
                        .IsRequired();

                    b.Property<bool?>("flag");

                    b.HasKey("ContentId");

                    b.ToTable("TblContent");
                });

            modelBuilder.Entity("Application.Models.TblEXPERT_", b =>
                {
                    b.Property<int>("idExpert")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ExpertName");

                    b.Property<bool?>("flag");

                    b.Property<string>("lastUpdate");

                    b.HasKey("idExpert");

                    b.ToTable("TblEXPERT_");
                });

            modelBuilder.Entity("Application.Models.TblINSTITUTE_", b =>
                {
                    b.Property<int>("idInstitues")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ADDRESS");

                    b.Property<string>("TEL");

                    b.Property<string>("ZIP");

                    b.Property<int?>("codeOrgan");

                    b.Property<string>("email");

                    b.Property<string>("fax");

                    b.Property<bool?>("flag");

                    b.Property<string>("hos");

                    b.Property<int?>("idCity");

                    b.Property<int?>("idINSTITUTE_TYPE");

                    b.Property<int?>("idowner");

                    b.Property<string>("lastUpdate");

                    b.Property<string>("mobile");

                    b.Property<string>("nameOrgan");

                    b.Property<string>("nameOrganMain");

                    b.HasKey("idInstitues");

                    b.HasIndex("idCity");

                    b.HasIndex("idINSTITUTE_TYPE");

                    b.HasIndex("idowner");

                    b.ToTable("TblINSTITUTE_");
                });

            modelBuilder.Entity("Application.Models.TblINSTITUTE_PERSONEL_", b =>
                {
                    b.Property<int>("id_personal")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DRName");

                    b.Property<string>("DrFamily");

                    b.Property<int?>("Id_EXPERT");

                    b.Property<int?>("Id_MADRAK");

                    b.Property<int?>("Id_RESHTEH");

                    b.Property<int?>("Id_ROLETYPE");

                    b.Property<double?>("Tekrari");

                    b.Property<int?>("codeOrgan");

                    b.Property<bool?>("flag");

                    b.Property<string>("lastUpdate");

                    b.Property<string>("nezamId");

                    b.Property<string>("passWord");

                    b.HasKey("id_personal");

                    b.HasIndex("Id_EXPERT");

                    b.HasIndex("Id_MADRAK");

                    b.HasIndex("Id_RESHTEH");

                    b.HasIndex("Id_ROLETYPE");

                    b.ToTable("TblINSTITUTE_PERSONEL_");
                });

            modelBuilder.Entity("Application.Models.TblINSTITUTE_TYPE_", b =>
                {
                    b.Property<int>("idINSTITUTE_TYPE")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("INSTITUTE_TYPE");

                    b.Property<bool?>("flag");

                    b.Property<string>("lastUpdate");

                    b.HasKey("idINSTITUTE_TYPE");

                    b.ToTable("TblINSTITUTE_TYPE_");
                });

            modelBuilder.Entity("Application.Models.TblMadarek_", b =>
                {
                    b.Property<int>("idMadarek")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MadarekName");

                    b.Property<bool?>("flag");

                    b.Property<string>("lastUpdate");

                    b.HasKey("idMadarek");

                    b.ToTable("TblMadarek_");
                });

            modelBuilder.Entity("Application.Models.TblMenu", b =>
                {
                    b.Property<int>("menuId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MenueDate");

                    b.Property<bool?>("flag");

                    b.Property<string>("link");

                    b.Property<int?>("menuFatherID");

                    b.Property<string>("menuName");

                    b.Property<int?>("order");

                    b.HasKey("menuId");

                    b.ToTable("TblMenu");
                });

            modelBuilder.Entity("Application.Models.TblOwner_", b =>
                {
                    b.Property<int>("idOwner")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("OwnerName");

                    b.Property<bool?>("flag");

                    b.Property<string>("lastUpdate");

                    b.HasKey("idOwner");

                    b.ToTable("TblOwner_");
                });

            modelBuilder.Entity("Application.Models.TblPassWord", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("password");

                    b.Property<string>("username");

                    b.HasKey("id");

                    b.ToTable("TblPassWord");
                });

            modelBuilder.Entity("Application.Models.TblPersonal", b =>
                {
                    b.Property<int>("idPerson")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("family")
                        .IsRequired();

                    b.Property<string>("fname")
                        .IsRequired();

                    b.Property<string>("natCode")
                        .IsRequired();

                    b.HasKey("idPerson");

                    b.ToTable("TblPersonal");
                });

            modelBuilder.Entity("Application.Models.TblRepDevice", b =>
                {
                    b.Property<int>("idDevice")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("API");

                    b.Property<string>("Brand");

                    b.Property<string>("Date");

                    b.Property<string>("IMEI");

                    b.Property<string>("Model");

                    b.Property<string>("SDK");

                    b.HasKey("idDevice");

                    b.ToTable("TblRepDevice");
                });

            modelBuilder.Entity("Application.Models.TblReport", b =>
                {
                    b.Property<byte>("ReportID");

                    b.Property<string>("ReportName");

                    b.Property<string>("ReportURL");

                    b.HasKey("ReportID");

                    b.ToTable("TblReport");
                });

            modelBuilder.Entity("Application.Models.TblReshteh_", b =>
                {
                    b.Property<int>("idReshteh")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("flag");

                    b.Property<string>("lastUpdate");

                    b.Property<string>("reshtehName");

                    b.HasKey("idReshteh");

                    b.ToTable("TblReshteh_");
                });

            modelBuilder.Entity("Application.Models.TblTel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("fname");

                    b.Property<string>("lname");

                    b.Property<string>("tel");

                    b.HasKey("id");

                    b.ToTable("TblTel");
                });

            modelBuilder.Entity("Application.Models.TblTypeMasolyat", b =>
                {
                    b.Property<int>("TypeMasolyatID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TypeMasolyat");

                    b.HasKey("TypeMasolyatID");

                    b.ToTable("TblTypeMasolyat");
                });

            modelBuilder.Entity("Application.Models.TblUserVisite", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountUser");

                    b.Property<string>("dateVisite");

                    b.HasKey("id");

                    b.ToTable("TblUserVisite");
                });

            modelBuilder.Entity("Application.Models.TblVer", b =>
                {
                    b.Property<int>("IdVer")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DateUpdate");

                    b.Property<int>("verCode");

                    b.HasKey("IdVer");

                    b.ToTable("TblVer");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Application.Models.ApplicationUser", b =>
                {
                    b.HasOne("Application.Models.ApplicationRole")
                        .WithMany("user")
                        .HasForeignKey("ApplicationRoleId");
                });

            modelBuilder.Entity("Application.Models.Institute_Personal", b =>
                {
                    b.HasOne("Application.Models.TblEXPERT_", "TblEXPERT_")
                        .WithMany()
                        .HasForeignKey("Id_EXPERT");

                    b.HasOne("Application.Models.TblMadarek_", "TblMadarek_")
                        .WithMany()
                        .HasForeignKey("Id_MADRAK");

                    b.HasOne("Application.Models.TblReshteh_", "TblReshteh_")
                        .WithMany()
                        .HasForeignKey("Id_RESHTEH");

                    b.HasOne("Application.Models.ROLE_TYPE_", "ROLE_TYPE_")
                        .WithMany()
                        .HasForeignKey("Id_ROLETYPE");
                });

            modelBuilder.Entity("Application.Models.OfficeRefrandum", b =>
                {
                    b.HasOne("Application.Models.EmployeeType", "EmployeeType")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Application.Models.tbl_Education", "TblEducation")
                        .WithMany()
                        .HasForeignKey("IdEdu")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Application.Models.ServiceTable", b =>
                {
                    b.HasOne("Application.Models.TblCity_", "TblCity")
                        .WithMany()
                        .HasForeignKey("IdCity")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Application.Models.tbl_Education", "TblEducation")
                        .WithMany()
                        .HasForeignKey("IdEdu")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Application.Models.SurveyOfIinsured", b =>
                {
                    b.HasOne("Application.Models.tbl_Bime", "TblBime")
                        .WithMany()
                        .HasForeignKey("IdBime")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Application.Models.TblCity_", "TblCity")
                        .WithMany()
                        .HasForeignKey("IdCity")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Application.Models.tbl_Comment", b =>
                {
                    b.HasOne("Application.Models.tbl_Bime", "Tbl_Bime")
                        .WithMany()
                        .HasForeignKey("idBime")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Application.Models.tbl_Education", "Tbl_Education")
                        .WithMany()
                        .HasForeignKey("idEducation")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Application.Models.tbl_Moraje", "Tbl_Moraje")
                        .WithMany()
                        .HasForeignKey("idMoraje")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Application.Models.tbl_Reason", "Tbl_Reason")
                        .WithMany()
                        .HasForeignKey("idReason")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Application.Models.tbl_sex", "Tbl_Sex")
                        .WithMany()
                        .HasForeignKey("idSex")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Application.Models.tbl_State", "Tbl_State")
                        .WithMany()
                        .HasForeignKey("idState")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Application.Models.TblComplaint", b =>
                {
                    b.HasOne("Application.Models.TblAudience", "TblAudience")
                        .WithMany()
                        .HasForeignKey("idAudience")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Application.Models.TblCashDeskInsurance", "TblCashDeskInsurance")
                        .WithMany()
                        .HasForeignKey("idCashDeskInsurance")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Application.Models.TblCity_", "TblCity_")
                        .WithMany()
                        .HasForeignKey("idCity")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Application.Models.TblINSTITUTE_", b =>
                {
                    b.HasOne("Application.Models.TblCity_", "TblCity_")
                        .WithMany()
                        .HasForeignKey("idCity");

                    b.HasOne("Application.Models.TblINSTITUTE_TYPE_", "TblINSTITUTE_TYPE_")
                        .WithMany()
                        .HasForeignKey("idINSTITUTE_TYPE");

                    b.HasOne("Application.Models.TblOwner_", "TblOwner_")
                        .WithMany()
                        .HasForeignKey("idowner");
                });

            modelBuilder.Entity("Application.Models.TblINSTITUTE_PERSONEL_", b =>
                {
                    b.HasOne("Application.Models.TblEXPERT_", "TblEXPERT_")
                        .WithMany()
                        .HasForeignKey("Id_EXPERT");

                    b.HasOne("Application.Models.TblMadarek_", "TblMadarek_")
                        .WithMany()
                        .HasForeignKey("Id_MADRAK");

                    b.HasOne("Application.Models.TblReshteh_", "TblReshteh_")
                        .WithMany()
                        .HasForeignKey("Id_RESHTEH");

                    b.HasOne("Application.Models.ROLE_TYPE_", "ROLE_TYPE_")
                        .WithMany()
                        .HasForeignKey("Id_ROLETYPE");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Application.Models.ApplicationRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Application.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Application.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Application.Models.ApplicationRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Application.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Application.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
